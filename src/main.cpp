#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <dht.h>
#include <I2CSoilMoistureSensor.h>
#include <SFE_MicroOLED.h>  // Include the SFE_MicroOLED library

#define PIN_RESET 255  //
#define DC_JUMPER 0  // I2C Addres: 0 - 0x3C, 1 - 0x3D

#define DHTTYPE DHT22   // DHT 22  (AM2302)

#define BLUE_LED D6
#define GREEN_LED D7
#define RED_LED D8
#define DHTPIN D4     // what pin we're connected to

const int sclPin = D1;
const int sdaPin = D2;

uint8_t cloud [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40,
0x40, 0x40, 0x40, 0x40, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0x40, 0x40, 0x30, 0x08, 0x04, 0x04, 0x04, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0C, 0x08, 0x00, 0x10, 0x10, 0x20, 0x40, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7E, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x02, 0x02, 0x02, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

I2CSoilMoistureSensor sensor;
//////////////////////////////////
// MicroOLED Object Declaration //
//////////////////////////////////
MicroOLED oled(PIN_RESET, DC_JUMPER);  // I2C Example
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);  // initialize onboard LED as output
  pinMode(BLUE_LED, OUTPUT);  // set onboard LED as output
  pinMode(GREEN_LED, OUTPUT);  // set onboard LED as output
  pinMode(RED_LED, OUTPUT);  // set onboard LED as output

  Serial.begin(9600);
  Serial.println("PlantSensor V3.0 Beta");

  Wire.begin(sdaPin, sclPin);

  sensor.begin(); // reset sensor
  delay(1000); // give some time to boot up
  Serial.print("I2C Soil Moisture Sensor Address: ");
  Serial.println(sensor.getAddress(),HEX);
  Serial.print("Sensor Firmware version: ");
  Serial.println(sensor.getVersion(),HEX);
  Serial.println();

  // These three lines of code are all you need to initialize the
   // OLED and print the splash screen.

   // Before you can start using the OLED, call begin() to init
   // all of the pins and configure the OLED.
   oled.begin();
   // clear(ALL) will clear out the OLED's graphic memory.
   // clear(PAGE) will clear the Arduino's display buffer.
   oled.clear(ALL);  // Clear the display's memory (gets rid of artifacts)
   // To actually draw anything on the display, you must call the
   // display() function.
   //oled.display();
   //delay(1000);//pause for the splash screen
   //Note: You can change the spalsh screen by editing the array founf in the library source code

   oled.clear(PAGE);//clear the screen before we draw our image
   oled.drawBitmap(cloud);//call the drawBitmap function and pass it the array from above
   oled.display();//display the imgae

   dht.begin();

}

void loop() {
  /*digitalWrite(BUILTIN_LED, HIGH);  // turn on LED with voltage HIGH
  //delay(500);                      // wait one second
  //digitalWrite(BUILTIN_LED, LOW);   // turn off LED with voltage LOW
  //delay(500);                      // wait one second
  digitalWrite(BLUE_LED, HIGH);           // turn on LED with voltage HIGH
  delay(500);
  digitalWrite(BLUE_LED, LOW);            // turn off LED with voltage LOW
  digitalWrite(GREEN_LED, HIGH);           // turn on LED with voltage HIGH
  delay(500);
  digitalWrite(GREEN_LED, LOW);            // turn off LED with voltage LOW
  digitalWrite(RED_LED, HIGH);           // turn on LED with voltage HIGH
  delay(500);                      // wait one second
  digitalWrite(RED_LED, LOW);            // turn off LED with voltage LOW

*/


delay(10000);
  while (sensor.isBusy()) delay(50); // available since FW 2.3
  float soilMoisture = sensor.getCapacitance();
  float tempChirp = sensor.getTemperature()/(float)10;
  float light = sensor.getLight(true);
  sensor.sleep(); // available since FW 2.3

  float temp = dht.readTemperature();
  float humidity = dht.readHumidity();

  Serial.print("Soil Moisture Capacitance: ");
  Serial.print(soilMoisture); //read capacitance register
  Serial.print(", Temperature: ");
  Serial.print(tempChirp); //temperature register
  Serial.print(", Light: ");
  Serial.print(light); //request light measurement, wait and read light register
  Serial.print(", DHT Temperature: ");
  Serial.print(temp);
  Serial.print(", DHT Humidity: ");
  Serial.print(humidity);
  Serial.print(", DHT HeatIndex: ");
  Serial.println(dht.computeHeatIndex(temp, humidity, false));

}
